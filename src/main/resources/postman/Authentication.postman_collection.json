{
	"info": {
		"_postman_id": "0bf51cd1-ac39-44fc-a0bc-2c93ce5e32ba",
		"name": "Smarthome",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Authentication",
			"item": [
				{
					"name": "getToken",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200 (Right Credentials)\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"try{",
									"    tests[\"Access Token is assigned, and it's a string\"] = typeof pm.response.json().jwt === 'string';",
									"",
									"    //tests[\"Refresh Token is assigned, and it's a string\"] = typeof pm.response.json().refresh_token === 'string';",
									"    ",
									"    pm.environment.set(\"jwt\", pm.response.json().jwt);",
									"    //pm.environment.set(\"refresh_token\", pm.response.json().refresh_token);",
									"} catch (ex){",
									"    tests[\"An error occured\"] = false;",
									"}",
									"",
									"if (pm.environment.get(\"lastRequestBeforeAuthenticationFailed\") !== null && pm.environment.get(\"lastRequestBeforeAuthenticationFailed\") !== undefined && pm.environment.get(\"lastRequestBeforeAuthenticationFailed\") !== \"\"){",
									"    postman.setNextRequest( pm.environment.get(\"lastRequestBeforeAuthenticationFailed\") );",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "cameraMac",
									"value": "BE:CC:EE:CF:BC:DB",
									"type": "text",
									"disabled": true
								},
								{
									"key": "sdpJwt",
									"value": "GR6KwNEJf9F8IUjJbiezwEq4XsZcuZC_dHoNK6kgpZWSUt_lSFDyH5cKy8fQFveUYytyuay4BkwdumIG0eOFfuYYLx8xBe1WEBZo2mBKyAelQohB51VRwdpthHTlHMDEqtKbiDSybYdJ9XuEGwG1PWaYUE27y38bhN3UyFZfQhLyoGGb4LNaYinLr4ZlHeJqFeLqz0clvLOQw1Bv37v3hhtplR-WE8sDAXSDawgxQG6hF6Qth8Gh96GLuBwMG2Fzu0vI-7kQQL7bmA1_T0ZnK9W5HzIqKlRZrGmGwoxInbHJsF0Nd7JVRZ13Gev2taOc3KHXO1B9J9V8xuqoRgqI4btrHsFesb_s4Hti9Ptm0Bge_x4iISxZfrpNmoWvijsvhJJIOwgb3VeLuFYS6AlG3NM8OJFIXi8Vdhzd5wADCNcGxyIW-P9AST7N7JTYD2az",
									"type": "text",
									"disabled": true
								},
								{
									"key": "username",
									"value": "irene",
									"description": "user ",
									"type": "text",
									"disabled": true
								},
								{
									"key": "password",
									"value": "123555",
									"description": "pass",
									"type": "text",
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "{{protocol}}://{{host}}:{{port}}/auth/token",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"auth",
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "refreshToken",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{protocol}}://{{host}}:{{port}}/auth/refreshToken",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"auth",
								"refreshToken"
							]
						}
					},
					"response": []
				},
				{
					"name": "checkIfUserExists",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{protocol}}://{{host}}:{{port}}/auth/users/:user",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"auth",
								"users",
								":user"
							],
							"variable": [
								{
									"key": "user",
									"value": "irene"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "deleteUser",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{jwt}}"
							}
						],
						"url": {
							"raw": "{{protocol}}://{{host}}:{{port}}/auth/users/:user",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"auth",
								"users",
								":user"
							],
							"variable": [
								{
									"key": "user",
									"value": "hola"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "createUser",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{jwt}}"
							}
						],
						"url": {
							"raw": "{{protocol}}://{{host}}:{{port}}/auth/users/:user/:pass/:role",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"auth",
								"users",
								":user",
								":pass",
								":role"
							],
							"variable": [
								{
									"key": "user",
									"value": "Irene"
								},
								{
									"key": "pass",
									"value": "123"
								},
								{
									"key": "role",
									"value": "admin"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "updateUser",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{jwt}}"
							}
						],
						"url": {
							"raw": "{{protocol}}://{{host}}:{{port}}/auth/users/:user/:pass/:role",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"port": "{{port}}",
							"path": [
								"auth",
								"users",
								":user",
								":pass",
								":role"
							],
							"variable": [
								{
									"key": "user",
									"value": "hola"
								},
								{
									"key": "pass",
									"value": "1234"
								},
								{
									"key": "role",
									"value": "admin"
								}
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "basic",
		"basic": [
			{
				"key": "password",
				"value": "twopax!",
				"type": "string"
			},
			{
				"key": "username",
				"value": "mirgor",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}